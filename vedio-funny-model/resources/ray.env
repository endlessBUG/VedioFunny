# =================================================================
# VedioFun Model Service - Ray环境配置文件
# 用途: 为Ray集群部署提供统一的环境配置
# 作者: VedioFun Team
# =================================================================

# ===== Ray集群基础配置 =====
# Ray集群端口配置
RAY_HEAD_PORT=6379
RAY_DASHBOARD_PORT=8265
RAY_CLIENT_SERVER_PORT=10001
RAY_OBJECT_STORE_MEMORY=1000000000

# Ray临时目录配置
RAY_TMPDIR=/tmp/ray
RAY_LOG_DIR=/tmp/ray/logs
RAY_SESSION_DIR=/tmp/ray/session

# Ray集群标识
RAY_CLUSTER_NAME=vedio-funny-cluster
RAY_NODE_TYPE=worker

# ===== Conda和Python环境配置 =====
# Miniconda安装目录
CONDA_HOME=${HOME}/miniconda3
MINICONDA_INSTALL_DIR=${HOME}/miniconda3

# Conda可执行文件路径
CONDA_EXE=${CONDA_HOME}/bin/conda
CONDA_PYTHON_EXE=${CONDA_HOME}/bin/python

# Ray专用Python环境
CONDA_ENV_NAME=ray-env
RAY_ENV_NAME=ray-env
PYTHON_VERSION=3.12

# 环境检测路径
CONDA_SEARCH_PATHS=${HOME}/miniconda3/bin:${HOME}/anaconda3/bin:/opt/miniconda3/bin:/opt/anaconda3/bin:/usr/local/miniconda3/bin:/usr/local/anaconda3/bin

# ===== Ray安装和包配置 =====
# Ray包配置
RAY_PACKAGE="ray[default]"
RAY_VERSION=2.8.0

# 基础Python包列表（为Ray服务）
BASE_PACKAGES="pip numpy pandas scipy scikit-learn matplotlib seaborn"

# 深度学习包配置（Ray ML需要）
PYTORCH_INDEX_URL=https://download.pytorch.org/whl/cpu
PYTORCH_PACKAGES="torch torchvision torchaudio"

# HuggingFace配置（模型下载）
HUGGINGFACE_CACHE_DIR=/tmp/huggingface_cache
HUGGINGFACE_TOKEN=
HUGGINGFACE_HUB_CACHE=/tmp/huggingface_hub

# ModelScope配置（模型下载）
MODELSCOPE_CACHE_DIR=/tmp/modelscope_cache
MODELSCOPE_TOKEN=

# ===== 非交互式安装配置 =====
# 启用自动化模式，避免交互式提示
AUTO_INSTALL=true
CONDA_ALWAYS_YES=true
CI=true

# 安装包配置
PREBUILT_INSTALLERS_DIR=../resources/installers
MINICONDA_LINUX_X64=Miniconda3-latest-Linux-x86_64.sh
MINICONDA_LINUX_ARM64=Miniconda3-latest-Linux-aarch64.sh
MINICONDA_MACOS_X64=Miniconda3-latest-MacOSX-x86_64.sh
MINICONDA_MACOS_ARM64=Miniconda3-latest-MacOSX-arm64.sh

# 网络下载配置
MINICONDA_BASE_URL=https://repo.anaconda.com/miniconda
DOWNLOAD_TIMEOUT=300

# 备用源配置（国内镜像）
CONDA_TSINGHUA_URL=https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda
PIP_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple

# ===== Ray服务发现配置 =====
# Spring Boot应用端口（Ray节点服务）
SERVER_PORT=8080
MANAGEMENT_PORT=8080

# 应用名称和实例配置
SPRING_APPLICATION_NAME=vedio-funny-model
INSTANCE_HOSTNAME=${HOSTNAME}
INSTANCE_IP_ADDRESS=

# Nacos服务发现配置
NACOS_SERVER_ADDR=localhost:8848
NACOS_NAMESPACE=public
NACOS_GROUP=DEFAULT_GROUP
NACOS_SERVICE_NAME=${SPRING_APPLICATION_NAME}
NACOS_CLUSTER_NAME=DEFAULT
NACOS_WEIGHT=1.0

# ===== Ray模型存储配置 =====
# 模型存储路径
MODEL_STORAGE_PATH=/tmp/vedio-funny/models
RAY_MODEL_CACHE_DIR=/tmp/vedio-funny/models
UPLOAD_TEMP_PATH=/tmp/vedio-funny/uploads

# 模型下载配置
MODELS_BASE_PATH=/tmp/vedio-funny/models

# 文件大小限制（字节）
MAX_FILE_SIZE=1073741824
MAX_REQUEST_SIZE=1073741824

# 模型下载配置
# MODEL_DOWNLOAD_TIMEOUT=0  # 移除超时限制，允许长时间下载
MODEL_DOWNLOAD_RETRY_COUNT=3
MODEL_DOWNLOAD_CHUNK_SIZE=8192

# ===== Ray GPU和硬件配置 =====
# GPU配置
CUDA_VISIBLE_DEVICES=
NVIDIA_VISIBLE_DEVICES=
GPU_MEMORY_FRACTION=0.8
RAY_ENABLE_GPU=false

# CPU配置
OMP_NUM_THREADS=4
MKL_NUM_THREADS=4
RAY_CPUS_PER_NODE=

# 内存配置
JAVA_OPTS="-Xms512m -Xmx2g -XX:+UseG1GC"
RAY_MEMORY_PER_NODE=

# ===== Ray网络配置 =====
# HTTP客户端配置
HTTP_CONNECT_TIMEOUT=30000
HTTP_READ_TIMEOUT=60000
HTTP_CONNECTION_POOL_SIZE=50

# 代理配置（可选）
HTTP_PROXY=
HTTPS_PROXY=
NO_PROXY=localhost,127.0.0.1

# Ray网络配置
RAY_ADDRESS=
RAY_REDIS_ADDRESS=
RAY_GCS_ADDRESS=

# ===== Ray日志和监控配置 =====
# 日志配置
LOG_LEVEL=INFO
LOG_PATH=/tmp/vedio-funny/logs
RAY_LOG_LEVEL=INFO
RAY_BACKEND_LOG_LEVEL=warning

# 监控配置
MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,prometheus
MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always

# Ray监控
RAY_DASHBOARD_HOST=0.0.0.0
RAY_DASHBOARD_PORT=8265
RAY_METRICS_ENABLED=true

# ===== Ray任务和资源配置 =====
# 异步任务线程池
ASYNC_CORE_POOL_SIZE=5
ASYNC_MAX_POOL_SIZE=20
ASYNC_QUEUE_CAPACITY=100
ASYNC_KEEP_ALIVE_SECONDS=60

# Ray任务配置
RAY_MAX_TASKS_PER_NODE=
RAY_TASK_RETRY_COUNT=3
RAY_ACTOR_LIFETIME_TIMEOUT=60

# Ray资源配置
RAY_CUSTOM_RESOURCES={}
RAY_SYSTEM_CONFIG={}

# ===== Ray安全和认证配置 =====
# JWT配置（节点间通信）
JWT_SECRET=vedio-funny-jwt-secret-key-2024
JWT_EXPIRATION=86400
JWT_REFRESH_EXPIRATION=604800

# Ray安全配置
RAY_DISABLE_IMPORT_WARNING=1
RAY_DEDUP_LOGS=1

# ===== Ray环境标识配置 =====
# 运行环境
ENVIRONMENT=development
PROFILE_ACTIVE=dev
RAY_ENV_TYPE=development

# 调试配置
DEBUG_MODE=false
VERBOSE_LOGGING=false
RAY_DEBUG_MODE=false

# ===== Ray健康检查配置 =====
# 健康检查间隔
HEALTH_CHECK_INTERVAL=30
SERVICE_DISCOVERY_HEARTBEAT=30
RAY_HEARTBEAT_TIMEOUT=30

# 服务依赖检查
DEPENDENCY_CHECK_ENABLED=true
DEPENDENCY_CHECK_TIMEOUT=5000

# Ray集群健康检查
RAY_CLUSTER_HEALTH_CHECK_INTERVAL=60
RAY_NODE_HEALTH_CHECK_INTERVAL=30

# ===== Ray脚本路径配置 =====
# 环境验证脚本路径
ENV_CHECK_SCRIPT=check-conda-environment.sh
RAY_SETUP_SCRIPT=setup-conda-env.sh
INSTALL_SCRIPT=install-miniconda.sh

# Ray启动脚本
RAY_START_HEAD_SCRIPT=start-ray-head.sh
RAY_JOIN_CLUSTER_SCRIPT=join-ray-cluster.sh

# ===== Ray部署流程配置 =====
# 部署超时配置
RAY_DEPLOYMENT_TIMEOUT=300
RAY_CLUSTER_STARTUP_TIMEOUT=120
RAY_NODE_JOIN_TIMEOUT=60

# 部署重试配置
RAY_DEPLOYMENT_RETRY_COUNT=3
RAY_NODE_STARTUP_RETRY=2

# 部署验证配置
RAY_DEPLOYMENT_VERIFICATION_ENABLED=true
RAY_CLUSTER_STATUS_CHECK_ENABLED=true 